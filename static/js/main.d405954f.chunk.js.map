{"version":3,"sources":["assets/images/coinnav1.webp","component/NavBar.js","features/coinSlice.js","component/CryptoCard.js","component/HomeDisplay.js","component/CoinDetail.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["NavBar","history","useHistory","useEffect","gsap","from","duration","rotate","repeat","yoyo","y","ease","window","onscroll","pageYOffset","document","getElementById","classList","add","remove","className","id","onClick","push","src","coinImg","alt","coinSlice","createSlice","name","initialState","coin","reducers","tracker","state","action","payload","actions","selectCoin","CryptoCard","coinid","image","symbol","current_price","rank","hourChangePercentage","ChangePercentage24","updated","disptach","useDispatch","uid","toLocaleString","toFixed","useStyles","makeStyles","theme","root","marginTop","display","marginLeft","spacing","HomeResult","classes","useState","homeData","setHomeData","a","fetch","then","res","json","data","coinData","length","map","item","market_cap_rank","price_change_percentage_1h_in_currency","price_change_percentage_24h","last_updated","CircularProgress","color","CoinDetail","coinId","useSelector","setCoinData","console","log","opacity","rotateY","large","categories","hashing_algorithm","href","links","homepage","target","rel","market_data","inr","total_volume","price_change_percentage_7d_in_currency","price_change_percentage_1y_in_currency","App","exact","path","configureStore","reducer","coinReducer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","store","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yRAAe,G,kBAAA,IAA0B,uC,sBCwD1BA,MAlDf,WACE,IAAMC,EAAUC,cA0BhB,OAxBAC,qBAAU,WACRC,IAAKC,KAAK,WAAY,CACpBC,SAAU,EACVC,OAAQ,SACRC,QAAS,EACTC,MAAM,IAERL,IAAKC,KAAK,YAAa,CACrBC,SAAU,EACVI,GAAI,IACJC,KAAM,yBAEP,IAEHR,qBAAU,WACRS,OAAOC,SAAW,WACZD,OAAOE,YAAc,GACvBC,SAASC,eAAe,UAAUC,UAAUC,IAAI,iBAEhDH,SAASC,eAAe,UAAUC,UAAUE,OAAO,qBAMvD,qBAAKC,UAAU,SAASC,GAAG,SAA3B,SACE,kCACE,qBAAKD,UAAU,mBAAf,SACE,sBACEE,QAAS,kBAAMrB,EAAQsB,KAAK,MAC5BH,UAAU,wBACVC,GAAG,wBAHL,UAKE,qBAAKD,UAAU,UAAUI,IAAKC,EAASC,IAAI,KAC3C,qBAAIN,UAAU,WAAd,mBACQ,0D,yDC1CPO,EAAYC,YAAY,CACnCC,KAAM,OACNC,aAAc,CACZC,KAAM,GAERC,SAAU,CACRC,QAAS,SAACC,EAAOC,GACfD,EAAMH,KAAOI,EAAOC,YAKXH,EAAYN,EAAUU,QAAtBJ,QAKFK,EAAa,SAACJ,GAAD,OAAWA,EAAMH,KAAKA,MAEjCJ,IAAf,Q,MCkDeY,MAjEf,YAUI,IATFC,EASC,EATDA,OACAX,EAQC,EARDA,KACAY,EAOC,EAPDA,MACAC,EAMC,EANDA,OACAC,EAKC,EALDA,cACAC,EAIC,EAJDA,KACAC,EAGC,EAHDA,qBACAC,EAEC,EAFDA,mBACAC,EACC,EADDA,QAEM9C,EAAUC,cAEV8C,EAAWC,cAOjB,OACE,qBAAK3B,QANiB,WACtB0B,EAASf,EAAQ,CAAEiB,IAAKV,KACxBvC,EAAQsB,KAAK,kBAIkBH,UAAU,aAAzC,SACE,0BAASA,UAAU,mBAAnB,UACE,sBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,YAAf,UACE,sCACA,4BAAIwB,OAEN,qBAAKpB,IAAKiB,EAAOf,IAAI,KACrB,sBAAKN,UAAU,YAAf,UACE,sCACA,8BACGS,EADH,IACUa,EADV,aAMJ,sBAAKtB,UAAU,mBAAf,UACE,+CACA,+CAAMuB,QAAN,IAAMA,OAAN,EAAMA,EAAeQ,eAAe,eAGtC,sBAAK/B,UAAU,oBAAf,UACE,kDACA,oBAAGA,UAAW0B,EAAqB,EAAI,QAAU,MAAjD,iBACGA,QADH,IACGA,OADH,EACGA,EAAoBM,QAAQ,GAD/B,UAKF,sBAAKhC,UAAU,mBAAf,UACE,iDACA,oBAAGA,UAAWyB,EAAuB,EAAI,QAAU,MAAnD,iBACGA,QADH,IACGA,OADH,EACGA,EAAsBO,QAAQ,GADjC,UAKF,sBAAKhC,UAAU,qBAAf,UACE,8CACA,4BAAI2B,a,gBCzDRM,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,UAAW,OACXC,QAAS,OACT,YAAa,CACXC,WAAYJ,EAAMK,QAAQ,SAkDjBC,MA7Cf,WACE,IAAMC,EAAUT,IADI,EAEYU,mBAAS,IAFrB,mBAEbC,EAFa,KAEHC,EAFG,KAgBpB,OAZA9D,qBAAU,WASR,OARc,uCAAG,sBAAA+D,EAAA,sEACTC,MACJ,uJAECC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUN,EAAYM,MALf,2CAAH,oDAQPC,KACN,IAGD,qBAAKpD,UAAU,cAAf,SACuB,IAApB4C,EAASS,OACR,mCACGT,EAASU,KAAI,SAACC,GAAD,OACZ,cAAC,EAAD,CAEEnC,OAAQmC,EAAKtD,GACbQ,KAAM8C,EAAK9C,KACXY,MAAOkC,EAAKlC,MACZC,OAAQiC,EAAKjC,OACbC,cAAegC,EAAKhC,cACpBC,KAAM+B,EAAKC,gBACX/B,qBAAsB8B,EAAKE,uCAC3B/B,mBAAoB6B,EAAKG,4BACzB/B,QAAS4B,EAAKI,cATTJ,EAAKtD,SAchB,sBAAKD,UAAW0C,EAAQN,KAAxB,UACE,cAACwB,EAAA,EAAD,IACA,cAACA,EAAA,EAAD,CAAkBC,MAAM,oB,QC/C5B5B,G,MAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,UAAW,OACXC,QAAS,OACT,YAAa,CACXC,WAAYJ,EAAMK,QAAQ,UAqIjBsB,MAhIf,WAAuB,IAAD,sCACdpB,EAAUT,IACV8B,EAASC,YAAY9C,GAFP,EAIYyB,mBAAS,IAJrB,mBAIbS,EAJa,KAIHa,EAJG,KA2BpB,OArBAC,QAAQC,IAAIf,GAEZrE,qBAAU,WACRC,IAAKC,KAAK,cAAe,CACvBC,SAAU,EACVkF,QAAS,EACTC,QAAS,SACT9E,KAAM,qBAIVR,qBAAU,WAOR,OANc,uCAAG,sBAAA+D,EAAA,sEACTC,MAAM,0CAAD,OAA2CgB,EAAOjC,MAC1DkB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUc,EAAYd,MAHf,2CAAH,oDAMPC,KACN,CAACW,IAGF,8BACuB,IAApBX,EAASC,OACR,sBAAKrD,UAAU,aAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,qBAAKI,IAAG,UAAEgD,EAAS/B,aAAX,aAAE,EAAgBiD,MAAOhE,IAAK8C,EAASnD,OAEjD,sBAAKD,UAAU,uBAAf,UACE,wCACQ,+BAAOoD,EAAS3C,UAExB,0CACU,+BAAO2C,EAAS9B,YAE1B,8CACc,+BAAO8B,EAASmB,sBAIlC,sBAAKvE,UAAU,oBAAf,UACE,qDACqB,+BAAOoD,EAASoB,uBAErC,iDAEE,mBACEC,KAAI,UAAErB,EAASsB,aAAX,aAAE,EAAgBC,SACtBC,OAAO,SACPC,IAAI,aAHN,2BAQF,mDACmB,+BAAOzB,EAASI,qBAEnC,gDACiB,IACf,0CACI,IADJ,OAEGJ,QAFH,IAEGA,GAFH,UAEGA,EAAU0B,mBAFb,iBAEG,EAAuBvD,qBAF1B,iBAEG,EAAsCwD,WAFzC,aAEG,EAA2ChD,eAC1C,eAIN,+CACgB,IACd,0CACI,IADJ,OAEGqB,QAFH,IAEGA,GAFH,UAEGA,EAAU0B,mBAFb,iBAEG,EAAuBE,oBAF1B,iBAEG,EAAqCD,WAFxC,aAEG,EAA0ChD,eACzC,eAIN,uDACwB,IACtB,wCACGqB,QADH,IACGA,GADH,UACGA,EAAU0B,mBADb,iBACG,EAAuBrB,8CAD1B,iBACG,EAA+DsB,WADlE,aACG,EAAoE/C,QACnE,GAFJ,UAOF,wDACyB,IACvB,wCACGoB,QADH,IACGA,GADH,UACGA,EAAU0B,mBADb,iBACG,EAAuBpB,mCAD1B,aACG,EAAoD1B,QAAQ,GAD/D,UAKF,uDACwB,IACtB,wCACGoB,QADH,IACGA,GADH,UACGA,EAAU0B,mBADb,iBACG,EAAuBG,8CAD1B,iBACG,EAA+DF,WADlE,aACG,EAAoE/C,QACnE,GAFJ,UAOF,qDACsB,IACpB,wCACGoB,QADH,IACGA,GADH,UACGA,EAAU0B,mBADb,iBACG,EAAuBI,8CAD1B,iBACG,EAA+DH,WADlE,aACG,EAAoE/C,QACnE,GAFJ,gBAUN,sBAAKhC,UAAW0C,EAAQN,KAAxB,UACE,cAACwB,EAAA,EAAD,IACA,cAACA,EAAA,EAAD,CAAkBC,MAAM,oBClHnBsB,MAlBf,WACE,OACE,qBAAKnF,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoF,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,eAAlB,SACE,cAAC,EAAD,eCdGC,cAAe,CAC5BC,QAAS,CACP5E,KAAM6E,KCOUC,QACW,cAA7BjG,OAAOkG,SAASC,UAEe,UAA7BnG,OAAOkG,SAASC,UAEhBnG,OAAOkG,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJrG,SAASC,eAAe,SDqHpB,kBAAmBqG,WACrBA,UAAUC,cAAcC,MAAMnD,MAAK,SAAAoD,GACjCA,EAAaC,kB","file":"static/js/main.d405954f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/coinnav1.f7e11c72.webp\";","import React, { useEffect } from \"react\";\r\nimport \"./NavBar.css\";\r\nimport coinImg from \"../assets/images/coinnav1.webp\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport gsap from \"gsap\";\r\n\r\nfunction NavBar() {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    gsap.from(\".coinImg\", {\r\n      duration: 2,\r\n      rotate: \"360deg\",\r\n      repeat: -1,\r\n      yoyo: true,\r\n    });\r\n    gsap.from(\".aniTitle\", {\r\n      duration: 2,\r\n      y: -100,\r\n      ease: \"bounce.out(1, 0.3)\",\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.onscroll = () => {\r\n      if (window.pageYOffset > 50) {\r\n        document.getElementById(\"navBar\").classList.add(\"navBar_active\");\r\n      } else {\r\n        document.getElementById(\"navBar\").classList.remove(\"navBar_active\");\r\n      }\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className=\"navBar\" id=\"navBar\">\r\n      <section>\r\n        <nav className=\"navBar_container\">\r\n          <div\r\n            onClick={() => history.push(\"/\")}\r\n            className=\"navBar_container-left\"\r\n            id=\"navBar_container-left\"\r\n          >\r\n            <img className=\"coinImg\" src={coinImg} alt=\"\" />\r\n            <h1 className=\"aniTitle\">\r\n              crypto<strong>Tracker</strong>\r\n            </h1>\r\n          </div>\r\n          {/* <div className=\"navBar_container-right\">\r\n            <input type=\"text\" placeholder=\"Search..\" />\r\n          </div> */}\r\n        </nav>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const coinSlice = createSlice({\r\n  name: \"coin\",\r\n  initialState: {\r\n    coin: 0,\r\n  },\r\n  reducers: {\r\n    tracker: (state, action) => {\r\n      state.coin = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { tracker } = coinSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCoin = (state) => state.coin.coin;\r\n\r\nexport default coinSlice.reducer;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { tracker } from \"../features/coinSlice\";\r\nimport \"./CryptoCard.css\";\r\n\r\nfunction CryptoCard({\r\n  coinid,\r\n  name,\r\n  image,\r\n  symbol,\r\n  current_price,\r\n  rank,\r\n  hourChangePercentage,\r\n  ChangePercentage24,\r\n  updated,\r\n}) {\r\n  const history = useHistory();\r\n\r\n  const disptach = useDispatch();\r\n\r\n  const trackerFunction = () => {\r\n    disptach(tracker({ uid: coinid }));\r\n    history.push(\"./coin/detail\");\r\n  };\r\n\r\n  return (\r\n    <div onClick={trackerFunction} className=\"cryptoCard\">\r\n      <section className=\"cryptoCard_block\">\r\n        <div className=\"cryptoCard_left\">\r\n          <div className=\"left_rank\">\r\n            <h3>rank</h3>\r\n            <p>{rank}</p>\r\n          </div>\r\n          <img src={image} alt=\"\" />\r\n          <div className=\"left_name\">\r\n            <h3>Name</h3>\r\n            <p>\r\n              {name}({symbol})\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"cryptoCard_price\">\r\n          <h3>current price</h3>\r\n          <p>â‚¹ {current_price?.toLocaleString(\"en-IN\")}</p>\r\n        </div>\r\n\r\n        <div className=\"cryptoCard_24Hour\">\r\n          <h3>Price change 24h</h3>\r\n          <p className={ChangePercentage24 > 0 ? \"green\" : \"red\"}>\r\n            {ChangePercentage24?.toFixed(2)}%\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"cryptoCard_1Hour\">\r\n          <h3>Price change 1h</h3>\r\n          <p className={hourChangePercentage > 0 ? \"green\" : \"red\"}>\r\n            {hourChangePercentage?.toFixed(2)}%\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"cryptoCard_updated\">\r\n          <h3>last updated</h3>\r\n          <p>{updated}</p>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CryptoCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./HomeDisplay.css\";\r\nimport CryptoCard from \"./CryptoCard\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport gsap from \"gsap\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: \"30px\",\r\n    display: \"flex\",\r\n    \"& > * + *\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction HomeResult() {\r\n  const classes = useStyles();\r\n  const [homeData, setHomeData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const coinData = async () => {\r\n      await fetch(\r\n        \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=INR&order=market_cap_desc&per_page=100&page=1&sparkline=false&price_change_percentage=1h\"\r\n      )\r\n        .then((res) => res.json())\r\n        .then((data) => setHomeData(data));\r\n    };\r\n\r\n    return coinData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"homeDisplay\">\r\n      {homeData.length !== 0 ? (\r\n        <>\r\n          {homeData.map((item) => (\r\n            <CryptoCard\r\n              key={item.id}\r\n              coinid={item.id}\r\n              name={item.name}\r\n              image={item.image}\r\n              symbol={item.symbol}\r\n              current_price={item.current_price}\r\n              rank={item.market_cap_rank}\r\n              hourChangePercentage={item.price_change_percentage_1h_in_currency}\r\n              ChangePercentage24={item.price_change_percentage_24h}\r\n              updated={item.last_updated}\r\n            />\r\n          ))}\r\n        </>\r\n      ) : (\r\n        <div className={classes.root}>\r\n          <CircularProgress />\r\n          <CircularProgress color=\"secondary\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeResult;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectCoin } from \"../features/coinSlice\";\r\nimport \"./CoinDetail.css\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport gsap from \"gsap\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: \"30px\",\r\n    display: \"flex\",\r\n    \"& > * + *\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction CoinDetail() {\r\n  const classes = useStyles();\r\n  const coinId = useSelector(selectCoin);\r\n\r\n  const [coinData, setCoinData] = useState([]);\r\n\r\n  console.log(coinData);\r\n\r\n  useEffect(() => {\r\n    gsap.from(\".coinDetail\", {\r\n      duration: 2,\r\n      opacity: 0,\r\n      rotateY: \"360deg\",\r\n      ease: \"back.out(1.7)\",\r\n    });\r\n  });\r\n\r\n  useEffect(() => {\r\n    const coinData = async () => {\r\n      await fetch(`https://api.coingecko.com/api/v3/coins/${coinId.uid}`)\r\n        .then((res) => res.json())\r\n        .then((data) => setCoinData(data));\r\n    };\r\n\r\n    return coinData();\r\n  }, [coinId]);\r\n\r\n  return (\r\n    <div>\r\n      {coinData.length !== 0 ? (\r\n        <div className=\"coinDetail\">\r\n          <div className=\"coinDetail_top\">\r\n            <div className=\"coinDetail_top-left\">\r\n              <img src={coinData.image?.large} alt={coinData.id} />\r\n            </div>\r\n            <div className=\"coinDetail_top-right\">\r\n              <h3>\r\n                Name: <span>{coinData.name}</span>\r\n              </h3>\r\n              <h3>\r\n                Symbol: <span>{coinData.symbol}</span>\r\n              </h3>\r\n              <h3>\r\n                Categories: <span>{coinData.categories}</span>\r\n              </h3>\r\n            </div>\r\n          </div>\r\n          <div className=\"coinDetail_middle\">\r\n            <h3>\r\n              Hashing Algorithm: <span>{coinData.hashing_algorithm}</span>\r\n            </h3>\r\n            <h3>\r\n              Official Site :\r\n              <a\r\n                href={coinData.links?.homepage}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n              >\r\n                Click here\r\n              </a>\r\n            </h3>\r\n            <h3>\r\n              Market Cap Rank: <span>{coinData.market_cap_rank}</span>\r\n            </h3>\r\n            <h3>\r\n              Current Price:{\" \"}\r\n              <span>\r\n                â‚¹{\" \"}\r\n                {coinData?.market_data?.current_price?.inr?.toLocaleString(\r\n                  \"en-IN\"\r\n                )}\r\n              </span>\r\n            </h3>\r\n            <h3>\r\n              Total Volume:{\" \"}\r\n              <span>\r\n                â‚¹{\" \"}\r\n                {coinData?.market_data?.total_volume?.inr?.toLocaleString(\r\n                  \"en-IN\"\r\n                )}\r\n              </span>\r\n            </h3>\r\n            <h3>\r\n              Price Change in 1hrs:{\" \"}\r\n              <span>\r\n                {coinData?.market_data?.price_change_percentage_1h_in_currency?.inr?.toFixed(\r\n                  2\r\n                )}\r\n                %\r\n              </span>\r\n            </h3>\r\n            <h3>\r\n              Price Change in 24hrs:{\" \"}\r\n              <span>\r\n                {coinData?.market_data?.price_change_percentage_24h?.toFixed(2)}\r\n                %\r\n              </span>\r\n            </h3>\r\n            <h3>\r\n              Price Change in 7Day:{\" \"}\r\n              <span>\r\n                {coinData?.market_data?.price_change_percentage_7d_in_currency?.inr?.toFixed(\r\n                  2\r\n                )}\r\n                %\r\n              </span>\r\n            </h3>\r\n            <h3>\r\n              Price Change in 1Y:{\" \"}\r\n              <span>\r\n                {coinData?.market_data?.price_change_percentage_1y_in_currency?.inr?.toFixed(\r\n                  2\r\n                )}\r\n                %\r\n              </span>\r\n            </h3>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className={classes.root}>\r\n          <CircularProgress />\r\n          <CircularProgress color=\"secondary\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CoinDetail;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport NavBar from \"./component/NavBar\";\r\nimport HomeDisplay from \"./component/HomeDisplay\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport CoinDetail from \"./component/CoinDetail\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <HomeDisplay />\r\n          </Route>\r\n          <Route exact path=\"/coin/detail\">\r\n            <CoinDetail />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport coinReducer from \"../features/coinSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    coin: coinReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}